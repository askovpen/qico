dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/main.c)
AC_CONFIG_HEADER(config.h)
VERSION=0.49.5

dnl Checks for programs.
AC_PROG_AWK
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LEX
AC_PROG_YACC

dnl Checks for header files. We don't use results now, so why check?
dnl AC_HEADER_DIRENT
dnl AC_HEADER_STDC
dnl AC_HEADER_SYS_WAIT
dnl AC_CHECK_HEADERS(fcntl.h sys/ioctl.h sys/time.h syslog.h unistd.h)

AC_CHECK_HEADERS(sys/time.h)
AC_HEADER_TIME

dnl Checks for typedefs, structures, and compiler characteristics.
dnl AC_C_CONST
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_STRUCT_TM

dnl Check for tm_gmtoff
AC_MSG_CHECKING([for tm_gmtoff field in struct tm])
AC_TRY_COMPILE([#include <sys/types.h>
#include <$ac_cv_struct_tm>], [ struct tm t; t.tm_gmtoff = 0; ],
HAVE_GMTOFF=yes, HAVE_GMTOFF=no )
if test "$HAVE_GMTOFF" = yes; then
	AC_DEFINE(TM_HAVE_GMTOFF)
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi

dnl Checks for library functions. We don't use results now, so why check?
dnl AC_FUNC_FNMATCH
dnl AC_TYPE_SIGNAL
dnl AC_FUNC_STRFTIME
dnl AC_FUNC_UTIME_NULL
dnl AC_FUNC_VPRINTF
dnl AC_CHECK_FUNCS(getcwd mkdir rmdir select socket strcspn strdup strerror strspn strstr strtol uname)
AC_CHECK_FUNCS(basename)

dnl Checking for FreeBSD setproctitle in libutil
AC_CHECK_LIB(util, setproctitle)
AC_CHECK_HEADERS(libutil.h)

dnl Config file 
AC_MSG_CHECKING([for config path])
AC_ARG_WITH(config,[  --with-config           specifies config path (default is /etc/ftn/qico.conf) ], , with_config=/etc/ftn/qico.conf)
AC_DEFINE_UNQUOTED(CONFIG, "$with_config")
CONFIG=$with_config
AC_MSG_RESULT($with_config)

dnl ZModem
AC_MSG_CHECKING([for zmodem implemetation])
AC_ARG_WITH(new_zmodem,[  --with-new-zmodem       use new ZModem implementation ], , with_new_modem=no)
if test x$with_new_modem != xno; then
	AC_MSG_RESULT(new ZModem)
	AC_DEFINE(NEWZMODEM)
	NEWZMODEM=1
else 
	AC_MSG_RESULT(original ZModem)
	NEWZMODEM=0  
fi


dnl TCP Speed
AC_MSG_CHECKING([for TCP connection speed])
AC_ARG_WITH(tcp-speed,[  --with-tcp-speed        specifies TCP connection speed (default is 115200) ], , with_tcp_speed=115200)
AC_DEFINE_UNQUOTED(TCP_SPEED, $with_tcp_speed)
AC_MSG_RESULT($with_tcp_speed)

dnl Default Speed
AC_MSG_CHECKING([for default port locking speed])
AC_ARG_WITH(default-speed,[  --with-default-speed    specifies default port locking speed (default is 9600) ], , with_default_speed=9600)
AC_DEFINE_UNQUOTED(DEFAULT_SPEED, $with_default_speed)
AC_MSG_RESULT($with_default_speed)

dnl Shell
AC_MSG_CHECKING([for shell])
AC_ARG_WITH(shell,[  --with-shell            specifies shell (default is /bin/sh) ], , with_shell=/bin/sh)
AC_DEFINE_UNQUOTED(SHELL, "$with_shell")
AC_MSG_RESULT($with_shell)

dnl Lock creation style
AC_MSG_CHECKING([for lock creation style])
AC_ARG_WITH(lock-style,[  --with-lock-style       select lock creation style (open or link)] , , with_lock_style=LINK)
case "$with_lock_style" in
	link | LINK | NFS | nfs )
		AC_MSG_RESULT(link)
		;;
	open | OPEN | VFAT | vfat )
		AC_MSG_RESULT(open)
		AC_DEFINE(LOCKSTYLE_OPEN)
		;;
	*)
		AC_MSG_RESULT(link)
		;;
esac

dnl Amiga4D-style outbound support
AC_MSG_CHECKING([for outbound mode])
AC_ARG_ENABLE(aso, [  --enable-aso            enable Amiga-style 4D outbound ], , enable_aso=no)
if test x$enable_aso != xno; then
	AC_MSG_RESULT(aso)
	AC_DEFINE(AMIGA4D)
else 
	AC_MSG_RESULT(bso)
fi

dnl qcc support
AC_ARG_ENABLE(qcc, [  --disable-qcc           disable building of qcc and its support ], , enable_qcc=yes)
if test x$enable_qcc != xno; then
	AC_CHECK_LIB(ncurses, main, AC_DEFINE(HAVE_LIBNCURSES)
	CURSES=ncurses, AC_CHECK_LIB(curses, main,AC_DEFINE(HAVE_LIBCURSES)
	CURSES=curses))
	if test $CURSES; then
		AC_CHECK_LIB($CURSES, mvvline, AC_DEFINE(CURS_HAVE_MVVLINE))
		AC_CHECK_LIB($CURSES, wresize, AC_DEFINE(CURS_HAVE_WRESIZE))
		QCC=1
		AC_DEFINE(QCC)
		AC_CHECK_HEADERS(curses.h ncurses.h)
		QCCLIBS=-l$CURSES
		AC_MSG_CHECKING([for qcc support])
		AC_MSG_RESULT(yes)
	else
		AC_MSG_WARN([there's no any curses library here])
		AC_MSG_CHECKING([for qcc support])
		AC_MSG_RESULT(no)
		QCC=0
	fi
else
	AC_MSG_CHECKING([for qcc support])
	AC_MSG_RESULT(no)
	QCC=0
fi

dnl My substs
AC_SUBST(VERSION)
AC_SUBST(QCCLIBS)
AC_SUBST(QCC)
AC_SUBST(CONFIG)
AC_SUBST(TCP_SPEED)
AC_SUBST(DEFAULT_SPEED)
AC_SUBST(SHELL)
AC_SUBST(TM_HAVE_GMTOFF)
AC_SUBST(LOCKSTYLE_OPEN)
AC_SUBST(QIPC_KEY)
AC_SUBST(NEWZMODEM)

AC_OUTPUT(src/ver.c src/Makefile Makefile qico.spec, [echo timestamp > stamp-h])
